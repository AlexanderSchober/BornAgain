// This file has been generated by Py++.

// BornAgain: simulate and fit scattering at grazing incidence 
//! @brief automatically generated boost::python code for PythonCoreAPI  

#include "Macros.h"
GCC_DIAG_OFF(unused-parameter);
GCC_DIAG_OFF(missing-field-initializers);
#include "boost/python.hpp"
GCC_DIAG_ON(unused-parameter);
GCC_DIAG_ON(missing-field-initializers);
#include "PythonCoreList.h"
#include "OutputDataIOFactory.pypp.h"

namespace bp = boost::python;

void register_OutputDataIOFactory_class(){

    { //::OutputDataIOFactory
        typedef bp::class_< OutputDataIOFactory > OutputDataIOFactory_exposer_t;
        OutputDataIOFactory_exposer_t OutputDataIOFactory_exposer = OutputDataIOFactory_exposer_t( "OutputDataIOFactory", bp::init< >() );
        bp::scope OutputDataIOFactory_scope( OutputDataIOFactory_exposer );
        { //::OutputDataIOFactory::getReader
        
            typedef ::boost::shared_ptr< OutputDataReader > ( *getReader_function_type )( ::std::string const & );
            
            OutputDataIOFactory_exposer.def( 
                "getReader"
                , getReader_function_type( &::OutputDataIOFactory::getReader )
                , ( bp::arg("file_name") ) );
        
        }
        { //::OutputDataIOFactory::getWriter
        
            typedef ::boost::shared_ptr< OutputDataWriter > ( *getWriter_function_type )( ::std::string const & );
            
            OutputDataIOFactory_exposer.def( 
                "getWriter"
                , getWriter_function_type( &::OutputDataIOFactory::getWriter )
                , ( bp::arg("file_name") ) );
        
        }
        { //::OutputDataIOFactory::readIntensityData
        
            typedef ::OutputData< double > * ( *readIntensityData_function_type )( ::std::string const & );
            
            OutputDataIOFactory_exposer.def( 
                "readIntensityData"
                , readIntensityData_function_type( &::OutputDataIOFactory::readIntensityData )
                , ( bp::arg("file_name") )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::OutputDataIOFactory::writeIntensityData
        
            typedef void ( *writeIntensityData_function_type )( ::OutputData< double > const &,::std::string const & );
            
            OutputDataIOFactory_exposer.def( 
                "writeIntensityData"
                , writeIntensityData_function_type( &::OutputDataIOFactory::writeIntensityData )
                , ( bp::arg("data"), bp::arg("file_name") ) );
        
        }
        OutputDataIOFactory_exposer.staticmethod( "getReader" );
        OutputDataIOFactory_exposer.staticmethod( "getWriter" );
        OutputDataIOFactory_exposer.staticmethod( "readIntensityData" );
        OutputDataIOFactory_exposer.staticmethod( "writeIntensityData" );
    }

}
