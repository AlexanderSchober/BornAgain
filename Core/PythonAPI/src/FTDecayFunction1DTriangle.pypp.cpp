// This file has been generated by Py++.

// ************************************************************************** //
//
//  BornAgain: simulate and fit scattering at grazing incidence
//
//! @file      Automatically generated boost::python code for BornAgain Python bindings
//! @brief     Automatically generated boost::python code for BornAgain Python bindings
//!
//! @homepage  http://bornagainproject.org
//! @license   GNU General Public License v3 or higher (see COPYING)
//! @copyright Forschungszentrum Juelich GmbH 2015
//! @authors   Scientific Computing Group at MLZ Garching
//! @authors   C. Durniak, M. Ganeva, G. Pospelov, W. Van Herck, J. Wuttke
//
// ************************************************************************** //

#include "Macros.h"
GCC_DIAG_OFF(unused-parameter)
GCC_DIAG_OFF(missing-field-initializers)
#include "boost/python.hpp"
GCC_DIAG_ON(unused-parameter)
GCC_DIAG_ON(missing-field-initializers)
#include "PythonCoreList.h"
#include "FTDecayFunction1DTriangle.pypp.h"

namespace bp = boost::python;

struct FTDecayFunction1DTriangle_wrapper : FTDecayFunction1DTriangle, bp::wrapper< FTDecayFunction1DTriangle > {

    FTDecayFunction1DTriangle_wrapper(FTDecayFunction1DTriangle const & arg )
    : FTDecayFunction1DTriangle( arg )
      , bp::wrapper< FTDecayFunction1DTriangle >(){
        // copy constructor
        m_pyobj = 0;
    }

    FTDecayFunction1DTriangle_wrapper(double omega )
    : FTDecayFunction1DTriangle( omega )
      , bp::wrapper< FTDecayFunction1DTriangle >(){
        // constructor
    m_pyobj = 0;
    }

    virtual ::FTDecayFunction1DTriangle * clone(  ) const  {
        if( bp::override func_clone = this->get_override( "clone" ) )
            return func_clone(  );
        else{
            return this->FTDecayFunction1DTriangle::clone(  );
        }
    }
    
    ::FTDecayFunction1DTriangle * default_clone(  ) const  {
        return FTDecayFunction1DTriangle::clone( );
    }

    virtual double evaluate( double q ) const  {
        if( bp::override func_evaluate = this->get_override( "evaluate" ) )
            return func_evaluate( q );
        else{
            return this->FTDecayFunction1DTriangle::evaluate( q );
        }
    }
    
    double default_evaluate( double q ) const  {
        return FTDecayFunction1DTriangle::evaluate( q );
    }

    PyObject* m_pyobj;

};

void register_FTDecayFunction1DTriangle_class(){

    { //::FTDecayFunction1DTriangle
        typedef bp::class_< FTDecayFunction1DTriangle_wrapper, bp::bases< IFTDecayFunction1D >, std::auto_ptr< FTDecayFunction1DTriangle_wrapper > > FTDecayFunction1DTriangle_exposer_t;
        FTDecayFunction1DTriangle_exposer_t FTDecayFunction1DTriangle_exposer = FTDecayFunction1DTriangle_exposer_t( "FTDecayFunction1DTriangle", "1 dimensional triangle decay function in reciprocal space.", bp::init< double >(( bp::arg("omega") )) );
        bp::scope FTDecayFunction1DTriangle_scope( FTDecayFunction1DTriangle_exposer );
        { //::FTDecayFunction1DTriangle::clone
        
            typedef ::FTDecayFunction1DTriangle * ( ::FTDecayFunction1DTriangle::*clone_function_type)(  ) const;
            typedef ::FTDecayFunction1DTriangle * ( FTDecayFunction1DTriangle_wrapper::*default_clone_function_type)(  ) const;
            
            FTDecayFunction1DTriangle_exposer.def( 
                "clone"
                , clone_function_type(&::FTDecayFunction1DTriangle::clone)
                , default_clone_function_type(&FTDecayFunction1DTriangle_wrapper::default_clone)
                , bp::return_value_policy< bp::manage_new_object >() );
        
        }
        { //::FTDecayFunction1DTriangle::evaluate
        
            typedef double ( ::FTDecayFunction1DTriangle::*evaluate_function_type)( double ) const;
            typedef double ( FTDecayFunction1DTriangle_wrapper::*default_evaluate_function_type)( double ) const;
            
            FTDecayFunction1DTriangle_exposer.def( 
                "evaluate"
                , evaluate_function_type(&::FTDecayFunction1DTriangle::evaluate)
                , default_evaluate_function_type(&FTDecayFunction1DTriangle_wrapper::default_evaluate)
                , ( bp::arg("q") ) );
        
        }
    }

}
