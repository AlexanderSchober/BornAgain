// This file has been generated by Py++.

// BornAgain: simulate and fit scattering at grazing incidence 
//! @brief automatically generated boost::python code for PythonCoreAPI  

#include "Macros.h"
GCC_DIAG_OFF(unused-parameter);
GCC_DIAG_OFF(missing-field-initializers);
#include "boost/python.hpp"
GCC_DIAG_ON(unused-parameter);
GCC_DIAG_ON(missing-field-initializers);
#include "PythonCoreList.h"
#include "ICloneable.pypp.h"

namespace bp = boost::python;

struct ICloneable_wrapper : ICloneable, bp::wrapper< ICloneable > {

    ICloneable_wrapper( )
    : ICloneable( )
      , bp::wrapper< ICloneable >(){
        // null constructor
    
    }

    virtual ::ICloneable * clone(  ) const {
        bp::override func_clone = this->get_override( "clone" );
        return func_clone(  );
    }

};

void register_ICloneable_class(){

    { //::ICloneable
        typedef bp::class_< ICloneable_wrapper, boost::noncopyable > ICloneable_exposer_t;
        ICloneable_exposer_t ICloneable_exposer = ICloneable_exposer_t( "ICloneable", bp::init< >() );
        bp::scope ICloneable_scope( ICloneable_exposer );
        { //::ICloneable::clone
        
            typedef ::ICloneable * ( ::ICloneable::*clone_function_type )(  ) const;
            
            ICloneable_exposer.def( 
                "clone"
                , bp::pure_virtual( clone_function_type(&::ICloneable::clone) )
                , bp::return_value_policy< bp::manage_new_object >() );
        
        }
    }

}
