// This file has been generated by Py++.

// BornAgain: simulate and fit scattering at grazing incidence
//! @brief Automatically generated boost::python code for PythonCoreAPI

#include "Macros.h"
GCC_DIAG_OFF(unused-parameter)
GCC_DIAG_OFF(missing-field-initializers)
#include "boost/python.hpp"
GCC_DIAG_ON(unused-parameter)
GCC_DIAG_ON(missing-field-initializers)
#include "PythonCoreList.h"
#include "SimulationParameters.pypp.h"

namespace bp = boost::python;

void register_SimulationParameters_class(){

    { //::SimulationParameters
        typedef bp::class_< SimulationParameters > SimulationParameters_exposer_t;
        SimulationParameters_exposer_t SimulationParameters_exposer = SimulationParameters_exposer_t( "SimulationParameters", bp::init< >() );
        bp::scope SimulationParameters_scope( SimulationParameters_exposer );
        bp::enum_< SimulationParameters::EFramework>("EFramework")
            .value("DWBA", SimulationParameters::DWBA)
            .value("BA", SimulationParameters::BA)
            .export_values()
            ;
        bp::enum_< SimulationParameters::EInterferenceApproximation>("EInterferenceApproximation")
            .value("DA", SimulationParameters::DA)
            .value("LMA", SimulationParameters::LMA)
            .value("SSCA", SimulationParameters::SSCA)
            .value("ISGISAXSMOR", SimulationParameters::ISGISAXSMOR)
            .export_values()
            ;
        bp::enum_< SimulationParameters::ELatticeType>("ELatticeType")
            .value("NONE", SimulationParameters::NONE)
            .value("LATTICE", SimulationParameters::LATTICE)
            .value("PARA1D", SimulationParameters::PARA1D)
            .value("PARA1DFINITE", SimulationParameters::PARA1DFINITE)
            .export_values()
            ;
        SimulationParameters_exposer.def_readwrite( "me_framework", &SimulationParameters::me_framework );
        SimulationParameters_exposer.def_readwrite( "me_if_approx", &SimulationParameters::me_if_approx );
        SimulationParameters_exposer.def_readwrite( "me_lattice_type", &SimulationParameters::me_lattice_type );
    }

}
