//
// File generated by /opt/local/bin/rootcint at Wed Jun 13 13:08:12 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIAppDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "AppDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ISingleton< ::DrawHelper > ISingletonlEDrawHelpergR;
      #else
      class ISingletonlEDrawHelpergR  {
         public:
         //friend XX;
         typedef ::DrawHelper* T_Pointer;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ISingletonlEDrawHelpergR() throw() {};
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void DrawHelper_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DrawHelper(void *p = 0);
   static void *newArray_DrawHelper(Long_t size, void *p);
   static void delete_DrawHelper(void *p);
   static void deleteArray_DrawHelper(void *p);
   static void destruct_DrawHelper(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DrawHelper*)
   {
      ::DrawHelper *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DrawHelper >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DrawHelper", ::DrawHelper::Class_Version(), "inc/DrawHelper.h", 33,
                  typeid(::DrawHelper), DefineBehavior(ptr, ptr),
                  &::DrawHelper::Dictionary, isa_proxy, 4,
                  sizeof(::DrawHelper) );
      instance.SetNew(&new_DrawHelper);
      instance.SetNewArray(&newArray_DrawHelper);
      instance.SetDelete(&delete_DrawHelper);
      instance.SetDeleteArray(&deleteArray_DrawHelper);
      instance.SetDestructor(&destruct_DrawHelper);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DrawHelper*)
   {
      return GenerateInitInstanceLocal((::DrawHelper*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DrawHelper*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ISingletonlEDrawHelpergR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ISingletonlEDrawHelpergR_Dictionary();
   static void delete_ISingletonlEDrawHelpergR(void *p);
   static void deleteArray_ISingletonlEDrawHelpergR(void *p);
   static void destruct_ISingletonlEDrawHelpergR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ISingleton<DrawHelper>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ISingleton<DrawHelper>) == sizeof(::ROOT::Shadow::ISingletonlEDrawHelpergR));
      ::ISingleton<DrawHelper> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ISingleton<DrawHelper>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ISingleton<DrawHelper>", "../inc/ScattCore/ISingleton.h", 24,
                  typeid(::ISingleton<DrawHelper>), DefineBehavior(ptr, ptr),
                  &ISingletonlEDrawHelpergR_ShowMembers, &ISingletonlEDrawHelpergR_Dictionary, isa_proxy, 4,
                  sizeof(::ISingleton<DrawHelper>) );
      instance.SetDelete(&delete_ISingletonlEDrawHelpergR);
      instance.SetDeleteArray(&deleteArray_ISingletonlEDrawHelpergR);
      instance.SetDestructor(&destruct_ISingletonlEDrawHelpergR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ISingleton<DrawHelper>*)
   {
      return GenerateInitInstanceLocal((::ISingleton<DrawHelper>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ISingleton<DrawHelper>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ISingletonlEDrawHelpergR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ISingleton<DrawHelper>*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
TClass *DrawHelper::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *DrawHelper::Class_Name()
{
   return "DrawHelper";
}

//______________________________________________________________________________
const char *DrawHelper::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DrawHelper*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DrawHelper::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DrawHelper*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DrawHelper::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DrawHelper*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DrawHelper::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DrawHelper*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
namespace ROOT {
   void ISingletonlEDrawHelpergR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ISingleton<DrawHelper>.
      typedef ::ROOT::Shadow::ISingletonlEDrawHelpergR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ISingleton<DrawHelper>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ISingletonlEDrawHelpergR(void *p) {
      delete ((::ISingleton<DrawHelper>*)p);
   }
   static void deleteArray_ISingletonlEDrawHelpergR(void *p) {
      delete [] ((::ISingleton<DrawHelper>*)p);
   }
   static void destruct_ISingletonlEDrawHelpergR(void *p) {
      typedef ::ISingleton<DrawHelper> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ISingleton<DrawHelper>

//______________________________________________________________________________
void DrawHelper::Streamer(TBuffer &R__b)
{
   // Stream an object of class DrawHelper.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DrawHelper::Class(),this);
   } else {
      R__b.WriteClassBuffer(DrawHelper::Class(),this);
   }
}

//______________________________________________________________________________
void DrawHelper::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DrawHelper.
      TClass *R__cl = ::DrawHelper::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("ISingleton<DrawHelper>", ( ::ISingleton<DrawHelper> *) (this ), false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_DrawHelper(void *p) {
      return  p ? new(p) ::DrawHelper : new ::DrawHelper;
   }
   static void *newArray_DrawHelper(Long_t nElements, void *p) {
      return p ? new(p) ::DrawHelper[nElements] : new ::DrawHelper[nElements];
   }
   // Wrapper around operator delete
   static void delete_DrawHelper(void *p) {
      delete ((::DrawHelper*)p);
   }
   static void deleteArray_DrawHelper(void *p) {
      delete [] ((::DrawHelper*)p);
   }
   static void destruct_DrawHelper(void *p) {
      typedef ::DrawHelper current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::DrawHelper

/********************************************************
* src/AppDict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableAppDict();

extern "C" void G__set_cpp_environmentAppDict() {
  G__cpp_reset_tagtableAppDict();
}
#include <new>
extern "C" int G__cpp_dllrevAppDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* DrawHelper */
static int G__AppDict_178_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DrawHelper::SetStyle();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_178_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DrawHelper::SaveReport();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_178_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawHelper*) G__getstructoffset())->SetMagnifier((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_178_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawHelper*) G__getstructoffset())->ExecuteMagnifier((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TObject*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_178_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawHelper*) G__getstructoffset())->DrawMultilayer((MultiLayer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_178_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DrawHelper::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_178_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DrawHelper::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_178_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DrawHelper::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_178_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DrawHelper::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_178_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawHelper*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_178_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DrawHelper::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_178_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DrawHelper::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_178_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DrawHelper::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_178_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DrawHelper::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__AppDict_178_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DrawHelper *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DrawHelper[n];
     } else {
       p = new((void*) gvp) DrawHelper[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DrawHelper;
     } else {
       p = new((void*) gvp) DrawHelper;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AppDictLN_DrawHelper));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AppDict_178_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DrawHelper* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DrawHelper(*(DrawHelper*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AppDictLN_DrawHelper));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DrawHelper G__TDrawHelper;
static int G__AppDict_178_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DrawHelper*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DrawHelper*) (soff+(sizeof(DrawHelper)*i)))->~G__TDrawHelper();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DrawHelper*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DrawHelper*) (soff))->~G__TDrawHelper();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AppDict_178_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DrawHelper* dest = (DrawHelper*) G__getstructoffset();
   *dest = *(DrawHelper*) libp->para[0].ref;
   const DrawHelper& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ISingleton<DrawHelper> */
static int G__AppDict_179_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const DrawHelper& obj = ISingleton<DrawHelper>::instance();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ISingleton<DrawHelper> G__TISingletonlEDrawHelpergR;
static int G__AppDict_179_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ISingleton<DrawHelper>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ISingleton<DrawHelper>*) (soff+(sizeof(ISingleton<DrawHelper>)*i)))->~G__TISingletonlEDrawHelpergR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ISingleton<DrawHelper>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ISingleton<DrawHelper>*) (soff))->~G__TISingletonlEDrawHelpergR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AppDict_179_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ISingleton<DrawHelper>* dest = (ISingleton<DrawHelper>*) G__getstructoffset();
   *dest = *(ISingleton<DrawHelper>*) libp->para[0].ref;
   const ISingleton<DrawHelper>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* DrawHelper */

/* ISingleton<DrawHelper> */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncAppDict {
 public:
  G__Sizep2memfuncAppDict(): p(&G__Sizep2memfuncAppDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncAppDict::*p)();
};

size_t G__get_sizep2memfuncAppDict()
{
  G__Sizep2memfuncAppDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceAppDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AppDictLN_DrawHelper))) {
     DrawHelper *G__Lderived;
     G__Lderived=(DrawHelper*)0x1000;
     {
       ISingleton<DrawHelper> *G__Lpbase=(ISingleton<DrawHelper>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AppDictLN_DrawHelper),G__get_linked_tagnum(&G__AppDictLN_ISingletonlEDrawHelpergR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AppDictLN_DrawHelper),G__get_linked_tagnum(&G__AppDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableAppDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__AppDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AppDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AppDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AppDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AppDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__AppDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AppDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AppDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AppDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AppDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("T_Pointer",85,G__get_linked_tagnum(&G__AppDictLN_DrawHelper),0,G__get_linked_tagnum(&G__AppDictLN_ISingletonlEDrawHelpergR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* DrawHelper */
static void G__setup_memvarDrawHelper(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AppDictLN_DrawHelper));
   { DrawHelper *p; p=(DrawHelper*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AppDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ISingleton<DrawHelper> */
static void G__setup_memvarISingletonlEDrawHelpergR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AppDictLN_ISingletonlEDrawHelpergR));
   { ISingleton<DrawHelper> *p; p=(ISingleton<DrawHelper>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AppDictLN_DrawHelper),G__defined_typename("T_Pointer"),-2,2,"m_instance=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-2,2,"m_destroyed=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarAppDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDrawHelper(void) {
   /* DrawHelper */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AppDictLN_DrawHelper));
   G__memfunc_setup("SetStyle",829,G__AppDict_178_0_1, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DrawHelper::SetStyle) ), 0);
   G__memfunc_setup("SaveReport",1035,G__AppDict_178_0_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DrawHelper::SaveReport) ), 0);
   G__memfunc_setup("SetMagnifier",1214,G__AppDict_178_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExecuteMagnifier",1637,G__AppDict_178_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py U 'TObject' - 0 - sel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawMultilayer",1462,G__AppDict_178_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MultiLayer' - 10 - sample", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AppDict_178_0_6, 85, G__get_linked_tagnum(&G__AppDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DrawHelper::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AppDict_178_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DrawHelper::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AppDict_178_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DrawHelper::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AppDict_178_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DrawHelper::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AppDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AppDict_178_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AppDict_178_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DrawHelper::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AppDict_178_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DrawHelper::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AppDict_178_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DrawHelper::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AppDict_178_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DrawHelper::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("DrawHelper", 1006, G__AppDict_178_0_18, (int) ('i'), G__get_linked_tagnum(&G__AppDictLN_DrawHelper), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DrawHelper", 1006, G__AppDict_178_0_19, (int) ('i'), G__get_linked_tagnum(&G__AppDictLN_DrawHelper), -1, 0, 1, 1, 1, 0, "u 'DrawHelper' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DrawHelper", 1132, G__AppDict_178_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AppDict_178_0_21, (int) ('u'), G__get_linked_tagnum(&G__AppDictLN_DrawHelper), -1, 1, 1, 1, 1, 0, "u 'DrawHelper' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncISingletonlEDrawHelpergR(void) {
   /* ISingleton<DrawHelper> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AppDictLN_ISingletonlEDrawHelpergR));
   G__memfunc_setup("instance",853,G__AppDict_179_0_1, 117, G__get_linked_tagnum(&G__AppDictLN_DrawHelper), -1, 1, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (DrawHelper& (*)())(&ISingleton<DrawHelper>::instance) ), 0);
   G__memfunc_setup("ISingleton<DrawHelper>",2148,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__AppDictLN_ISingletonlEDrawHelpergR), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ISingleton<DrawHelper>",2148,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__AppDictLN_ISingletonlEDrawHelpergR), -1, 0, 1, 1, 2, 0, "u 'ISingleton<DrawHelper>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("create_singleton",1702,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 3, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("onDeadReference",1498,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 3, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ISingleton<DrawHelper>", 2274, G__AppDict_179_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AppDict_179_0_7, (int) ('u'), G__get_linked_tagnum(&G__AppDictLN_ISingletonlEDrawHelpergR), -1, 1, 1, 1, 1, 0, "u 'ISingleton<DrawHelper>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncAppDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalAppDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcAppDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__AppDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__AppDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__AppDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__AppDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__AppDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__AppDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AppDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__AppDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AppDictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__AppDictLN_MultiLayer = { "MultiLayer" , 99 , -1 };
G__linked_taginfo G__AppDictLN_DrawHelper = { "DrawHelper" , 99 , -1 };
G__linked_taginfo G__AppDictLN_ISingletonlEDrawHelpergR = { "ISingleton<DrawHelper>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableAppDict() {
  G__AppDictLN_TClass.tagnum = -1 ;
  G__AppDictLN_TBuffer.tagnum = -1 ;
  G__AppDictLN_TMemberInspector.tagnum = -1 ;
  G__AppDictLN_TObject.tagnum = -1 ;
  G__AppDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__AppDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AppDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__AppDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AppDictLN_TCanvas.tagnum = -1 ;
  G__AppDictLN_MultiLayer.tagnum = -1 ;
  G__AppDictLN_DrawHelper.tagnum = -1 ;
  G__AppDictLN_ISingletonlEDrawHelpergR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableAppDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__AppDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__AppDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__AppDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__AppDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__AppDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__AppDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AppDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AppDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AppDictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__AppDictLN_MultiLayer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AppDictLN_DrawHelper),sizeof(DrawHelper),-1,290816,(char*)NULL,G__setup_memvarDrawHelper,G__setup_memfuncDrawHelper);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AppDictLN_ISingletonlEDrawHelpergR),sizeof(ISingleton<DrawHelper>),-1,263936,(char*)NULL,G__setup_memvarISingletonlEDrawHelpergR,G__setup_memfuncISingletonlEDrawHelpergR);
}
extern "C" void G__cpp_setupAppDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupAppDict()");
  G__set_cpp_environmentAppDict();
  G__cpp_setup_tagtableAppDict();

  G__cpp_setup_inheritanceAppDict();

  G__cpp_setup_typetableAppDict();

  G__cpp_setup_memvarAppDict();

  G__cpp_setup_memfuncAppDict();
  G__cpp_setup_globalAppDict();
  G__cpp_setup_funcAppDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncAppDict();
  return;
}
class G__cpp_setup_initAppDict {
  public:
    G__cpp_setup_initAppDict() { G__add_setup_func("AppDict",(G__incsetup)(&G__cpp_setupAppDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initAppDict() { G__remove_setup_func("AppDict"); }
};
G__cpp_setup_initAppDict G__cpp_setup_initializerAppDict;

