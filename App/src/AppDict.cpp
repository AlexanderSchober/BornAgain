//
// File generated by /usr/local/root/bin/rootcint at Wed Mar 13 20:17:23 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIAppDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "AppDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ISingleton< ::DrawHelper > ISingletonlEDrawHelpergR;
      #else
      class ISingletonlEDrawHelpergR  {
         public:
         //friend XX;
         typedef ::DrawHelper* T_Pointer;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ISingletonlEDrawHelpergR() throw() {};
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void DrawHelper_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_DrawHelper(void *p);
   static void deleteArray_DrawHelper(void *p);
   static void destruct_DrawHelper(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DrawHelper*)
   {
      ::DrawHelper *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DrawHelper >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DrawHelper", ::DrawHelper::Class_Version(), "./inc/DrawHelper.h", 36,
                  typeid(::DrawHelper), DefineBehavior(ptr, ptr),
                  &::DrawHelper::Dictionary, isa_proxy, 4,
                  sizeof(::DrawHelper) );
      instance.SetDelete(&delete_DrawHelper);
      instance.SetDeleteArray(&deleteArray_DrawHelper);
      instance.SetDestructor(&destruct_DrawHelper);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DrawHelper*)
   {
      return GenerateInitInstanceLocal((::DrawHelper*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DrawHelper*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ISingletonlEDrawHelpergR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ISingletonlEDrawHelpergR_Dictionary();
   static void delete_ISingletonlEDrawHelpergR(void *p);
   static void deleteArray_ISingletonlEDrawHelpergR(void *p);
   static void destruct_ISingletonlEDrawHelpergR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ISingleton<DrawHelper>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ISingleton<DrawHelper>) == sizeof(::ROOT::Shadow::ISingletonlEDrawHelpergR));
      ::ISingleton<DrawHelper> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ISingleton<DrawHelper>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ISingleton<DrawHelper>", "../Core/Tools/inc/ISingleton.h", 24,
                  typeid(::ISingleton<DrawHelper>), DefineBehavior(ptr, ptr),
                  &ISingletonlEDrawHelpergR_ShowMembers, &ISingletonlEDrawHelpergR_Dictionary, isa_proxy, 4,
                  sizeof(::ISingleton<DrawHelper>) );
      instance.SetDelete(&delete_ISingletonlEDrawHelpergR);
      instance.SetDeleteArray(&deleteArray_ISingletonlEDrawHelpergR);
      instance.SetDestructor(&destruct_ISingletonlEDrawHelpergR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ISingleton<DrawHelper>*)
   {
      return GenerateInitInstanceLocal((::ISingleton<DrawHelper>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ISingleton<DrawHelper>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ISingletonlEDrawHelpergR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ISingleton<DrawHelper>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TreeEventOutputData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeEventOutputData(void *p = 0);
   static void *newArray_TreeEventOutputData(Long_t size, void *p);
   static void delete_TreeEventOutputData(void *p);
   static void deleteArray_TreeEventOutputData(void *p);
   static void destruct_TreeEventOutputData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeEventOutputData*)
   {
      ::TreeEventOutputData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeEventOutputData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeEventOutputData", ::TreeEventOutputData::Class_Version(), "./inc/TreeEventStructure.h", 29,
                  typeid(::TreeEventOutputData), DefineBehavior(ptr, ptr),
                  &::TreeEventOutputData::Dictionary, isa_proxy, 4,
                  sizeof(::TreeEventOutputData) );
      instance.SetNew(&new_TreeEventOutputData);
      instance.SetNewArray(&newArray_TreeEventOutputData);
      instance.SetDelete(&delete_TreeEventOutputData);
      instance.SetDeleteArray(&deleteArray_TreeEventOutputData);
      instance.SetDestructor(&destruct_TreeEventOutputData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TreeEventOutputData*)
   {
      return GenerateInitInstanceLocal((::TreeEventOutputData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeEventOutputData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TreeEventFitData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeEventFitData(void *p = 0);
   static void *newArray_TreeEventFitData(Long_t size, void *p);
   static void delete_TreeEventFitData(void *p);
   static void deleteArray_TreeEventFitData(void *p);
   static void destruct_TreeEventFitData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeEventFitData*)
   {
      ::TreeEventFitData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeEventFitData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeEventFitData", ::TreeEventFitData::Class_Version(), "./inc/TreeEventStructure.h", 65,
                  typeid(::TreeEventFitData), DefineBehavior(ptr, ptr),
                  &::TreeEventFitData::Dictionary, isa_proxy, 4,
                  sizeof(::TreeEventFitData) );
      instance.SetNew(&new_TreeEventFitData);
      instance.SetNewArray(&newArray_TreeEventFitData);
      instance.SetDelete(&delete_TreeEventFitData);
      instance.SetDeleteArray(&deleteArray_TreeEventFitData);
      instance.SetDestructor(&destruct_TreeEventFitData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TreeEventFitData*)
   {
      return GenerateInitInstanceLocal((::TreeEventFitData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeEventFitData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *DrawHelper::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *DrawHelper::Class_Name()
{
   return "DrawHelper";
}

//______________________________________________________________________________
const char *DrawHelper::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DrawHelper*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DrawHelper::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DrawHelper*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DrawHelper::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DrawHelper*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DrawHelper::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DrawHelper*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TreeEventOutputData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TreeEventOutputData::Class_Name()
{
   return "TreeEventOutputData";
}

//______________________________________________________________________________
const char *TreeEventOutputData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TreeEventOutputData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TreeEventOutputData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TreeEventOutputData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TreeEventOutputData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TreeEventOutputData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TreeEventOutputData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TreeEventOutputData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TreeEventFitData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TreeEventFitData::Class_Name()
{
   return "TreeEventFitData";
}

//______________________________________________________________________________
const char *TreeEventFitData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TreeEventFitData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TreeEventFitData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TreeEventFitData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TreeEventFitData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TreeEventFitData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TreeEventFitData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TreeEventFitData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
namespace ROOT {
   void ISingletonlEDrawHelpergR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ISingleton<DrawHelper>.
      typedef ::ROOT::Shadow::ISingletonlEDrawHelpergR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ISingleton<DrawHelper>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ISingletonlEDrawHelpergR(void *p) {
      delete ((::ISingleton<DrawHelper>*)p);
   }
   static void deleteArray_ISingletonlEDrawHelpergR(void *p) {
      delete [] ((::ISingleton<DrawHelper>*)p);
   }
   static void destruct_ISingletonlEDrawHelpergR(void *p) {
      typedef ::ISingleton<DrawHelper> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ISingleton<DrawHelper>

//______________________________________________________________________________
void DrawHelper::Streamer(TBuffer &R__b)
{
   // Stream an object of class DrawHelper.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DrawHelper::Class(),this);
   } else {
      R__b.WriteClassBuffer(DrawHelper::Class(),this);
   }
}

//______________________________________________________________________________
void DrawHelper::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DrawHelper.
      TClass *R__cl = ::DrawHelper::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_default_canvas_xsize", &m_default_canvas_xsize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_default_canvas_ysize", &m_default_canvas_ysize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_registered_canvases", (void*)&m_registered_canvases);
      R__insp.InspectMember("vector<TCanvas*>", (void*)&m_registered_canvases, "m_registered_canvases.", false);
      R__insp.GenericShowMembers("ISingleton<DrawHelper>", ( ::ISingleton<DrawHelper> *) (this ), false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_DrawHelper(void *p) {
      delete ((::DrawHelper*)p);
   }
   static void deleteArray_DrawHelper(void *p) {
      delete [] ((::DrawHelper*)p);
   }
   static void destruct_DrawHelper(void *p) {
      typedef ::DrawHelper current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::DrawHelper

//______________________________________________________________________________
void TreeEventOutputData::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeEventOutputData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeEventOutputData::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeEventOutputData::Class(),this);
   }
}

//______________________________________________________________________________
void TreeEventOutputData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeEventOutputData.
      TClass *R__cl = ::TreeEventOutputData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nframe", &nframe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpha_i", &alpha_i);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi_i", &phi_i);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nphi_f", &nphi_f);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi_f_min", &phi_f_min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi_f_max", &phi_f_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nalpha_f", &nalpha_f);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpha_f_min", &alpha_f_min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpha_f_max", &alpha_f_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "malpha", &malpha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mphi", &mphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "npR", &npR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vi", (void*)&vi);
      R__insp.InspectMember("vector<std::vector<double> >", (void*)&vi, "vi.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "valpha_f", (void*)&valpha_f);
      R__insp.InspectMember("vector<std::vector<double> >", (void*)&valpha_f, "valpha_f.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vphi_f", (void*)&vphi_f);
      R__insp.InspectMember("vector<std::vector<double> >", (void*)&vphi_f, "vphi_f.", false);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TreeEventOutputData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeEventOutputData : new ::TreeEventOutputData;
   }
   static void *newArray_TreeEventOutputData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeEventOutputData[nElements] : new ::TreeEventOutputData[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeEventOutputData(void *p) {
      delete ((::TreeEventOutputData*)p);
   }
   static void deleteArray_TreeEventOutputData(void *p) {
      delete [] ((::TreeEventOutputData*)p);
   }
   static void destruct_TreeEventOutputData(void *p) {
      typedef ::TreeEventOutputData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TreeEventOutputData

//______________________________________________________________________________
void TreeEventFitData::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeEventFitData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeEventFitData::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeEventFitData::Class(),this);
   }
}

//______________________________________________________________________________
void TreeEventFitData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeEventFitData.
      TClass *R__cl = ::TreeEventFitData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "niter", &niter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nstrategy", &nstrategy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "real_data", (void*)&real_data);
      R__insp.InspectMember("vector<std::vector<double> >", (void*)&real_data, "real_data.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fit_data", (void*)&fit_data);
      R__insp.InspectMember("vector<std::vector<double> >", (void*)&fit_data, "fit_data.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "axis0", (void*)&axis0);
      R__insp.InspectMember("vector<std::vector<double> >", (void*)&axis0, "axis0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "axis1", (void*)&axis1);
      R__insp.InspectMember("vector<std::vector<double> >", (void*)&axis1, "axis1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2", &chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parvalues", (void*)&parvalues);
      R__insp.InspectMember("vector<double>", (void*)&parvalues, "parvalues.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parnames", (void*)&parnames);
      R__insp.InspectMember("vector<std::string>", (void*)&parnames, "parnames.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parfixed", (void*)&parfixed);
      R__insp.InspectMember("vector<bool>", (void*)&parfixed, "parfixed.", false);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TreeEventFitData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeEventFitData : new ::TreeEventFitData;
   }
   static void *newArray_TreeEventFitData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeEventFitData[nElements] : new ::TreeEventFitData[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeEventFitData(void *p) {
      delete ((::TreeEventFitData*)p);
   }
   static void deleteArray_TreeEventFitData(void *p) {
      delete [] ((::TreeEventFitData*)p);
   }
   static void destruct_TreeEventFitData(void *p) {
      typedef ::TreeEventFitData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TreeEventFitData

namespace ROOT {
   void vectorlETCanvasmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETCanvasmUgR_Dictionary();
   static void *new_vectorlETCanvasmUgR(void *p = 0);
   static void *newArray_vectorlETCanvasmUgR(Long_t size, void *p);
   static void delete_vectorlETCanvasmUgR(void *p);
   static void deleteArray_vectorlETCanvasmUgR(void *p);
   static void destruct_vectorlETCanvasmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TCanvas*>*)
   {
      vector<TCanvas*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TCanvas*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TCanvas*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TCanvas*>), DefineBehavior(ptr, ptr),
                  0, &vectorlETCanvasmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TCanvas*>) );
      instance.SetNew(&new_vectorlETCanvasmUgR);
      instance.SetNewArray(&newArray_vectorlETCanvasmUgR);
      instance.SetDelete(&delete_vectorlETCanvasmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETCanvasmUgR);
      instance.SetDestructor(&destruct_vectorlETCanvasmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TCanvas*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TCanvas*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETCanvasmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TCanvas*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETCanvasmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TCanvas*> : new vector<TCanvas*>;
   }
   static void *newArray_vectorlETCanvasmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TCanvas*>[nElements] : new vector<TCanvas*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETCanvasmUgR(void *p) {
      delete ((vector<TCanvas*>*)p);
   }
   static void deleteArray_vectorlETCanvasmUgR(void *p) {
      delete [] ((vector<TCanvas*>*)p);
   }
   static void destruct_vectorlETCanvasmUgR(void *p) {
      typedef vector<TCanvas*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TCanvas*>

namespace ROOT {
   void vectorlEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEboolgR_Dictionary();
   static void *new_vectorlEboolgR(void *p = 0);
   static void *newArray_vectorlEboolgR(Long_t size, void *p);
   static void delete_vectorlEboolgR(void *p);
   static void deleteArray_vectorlEboolgR(void *p);
   static void destruct_vectorlEboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<bool>*)
   {
      vector<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bool>", -2, "vectorbool.dll", 0,
                  typeid(vector<bool>), DefineBehavior(ptr, ptr),
                  0, &vectorlEboolgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bool>) );
      instance.SetNew(&new_vectorlEboolgR);
      instance.SetNewArray(&newArray_vectorlEboolgR);
      instance.SetDelete(&delete_vectorlEboolgR);
      instance.SetDeleteArray(&deleteArray_vectorlEboolgR);
      instance.SetDestructor(&destruct_vectorlEboolgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool> : new vector<bool>;
   }
   static void *newArray_vectorlEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool>[nElements] : new vector<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEboolgR(void *p) {
      delete ((vector<bool>*)p);
   }
   static void deleteArray_vectorlEboolgR(void *p) {
      delete [] ((vector<bool>*)p);
   }
   static void destruct_vectorlEboolgR(void *p) {
      typedef vector<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<bool>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<string>

namespace ROOT {
   void vectorlEvectorlEdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEdoublegRsPgR_Dictionary();
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p);
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<double> >*)
   {
      vector<vector<double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<double> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<double> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEdoublegRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<double> >) );
      instance.SetNew(&new_vectorlEvectorlEdoublegRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEdoublegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEdoublegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<double> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> > : new vector<vector<double> >;
   }
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> >[nElements] : new vector<vector<double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete ((vector<vector<double> >*)p);
   }
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete [] ((vector<vector<double> >*)p);
   }
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p) {
      typedef vector<vector<double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<double> >

/********************************************************
* src/AppDict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableAppDict();

extern "C" void G__set_cpp_environmentAppDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("inc/App.h");
  G__cpp_reset_tagtableAppDict();
}
#include <new>
extern "C" int G__cpp_dllrevAppDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* DrawHelper */
static int G__AppDict_184_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DrawHelper::SetStyle();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_184_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DrawHelper::SaveReportPDFObsolete();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_184_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawHelper*) G__getstructoffset())->SetMagnifier((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_184_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawHelper*) G__getstructoffset())->ExecuteMagnifier((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TObject*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_184_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawHelper*) G__getstructoffset())->DrawMultilayer((MultiLayer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_184_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((DrawHelper*) G__getstructoffset())->createAndRegisterCanvas(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((DrawHelper*) G__getstructoffset())->createAndRegisterCanvas(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((DrawHelper*) G__getstructoffset())->createAndRegisterCanvas(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_184_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawHelper*) G__getstructoffset())->saveReport();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_184_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawHelper*) G__getstructoffset())->DrawMesoCrystal((MultiLayer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_184_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DrawHelper::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_184_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DrawHelper::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_184_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DrawHelper::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_184_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DrawHelper::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_184_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawHelper*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_184_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DrawHelper::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_184_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DrawHelper::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_184_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DrawHelper::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_184_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DrawHelper::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DrawHelper G__TDrawHelper;
static int G__AppDict_184_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DrawHelper*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DrawHelper*) (soff+(sizeof(DrawHelper)*i)))->~G__TDrawHelper();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DrawHelper*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DrawHelper*) (soff))->~G__TDrawHelper();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ISingleton<DrawHelper> */
static int G__AppDict_185_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const DrawHelper& obj = ISingleton<DrawHelper>::instance();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeEventOutputData */
static int G__AppDict_190_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeEventOutputData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeEventOutputData[n];
     } else {
       p = new((void*) gvp) TreeEventOutputData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeEventOutputData;
     } else {
       p = new((void*) gvp) TreeEventOutputData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AppDictLN_TreeEventOutputData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_190_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeEventOutputData*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_190_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeEventOutputData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_190_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeEventOutputData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_190_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeEventOutputData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_190_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeEventOutputData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_190_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeEventOutputData*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_190_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeEventOutputData*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_190_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeEventOutputData*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_190_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeEventOutputData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_190_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeEventOutputData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_190_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeEventOutputData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_190_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeEventOutputData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_190_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeEventOutputData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AppDict_190_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeEventOutputData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeEventOutputData(*(TreeEventOutputData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AppDictLN_TreeEventOutputData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeEventOutputData G__TTreeEventOutputData;
static int G__AppDict_190_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeEventOutputData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeEventOutputData*) (soff+(sizeof(TreeEventOutputData)*i)))->~G__TTreeEventOutputData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeEventOutputData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeEventOutputData*) (soff))->~G__TTreeEventOutputData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AppDict_190_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeEventOutputData* dest = (TreeEventOutputData*) G__getstructoffset();
   *dest = *(TreeEventOutputData*) libp->para[0].ref;
   const TreeEventOutputData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeEventFitData */
static int G__AppDict_195_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeEventFitData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeEventFitData[n];
     } else {
       p = new((void*) gvp) TreeEventFitData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeEventFitData;
     } else {
       p = new((void*) gvp) TreeEventFitData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AppDictLN_TreeEventFitData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_195_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeEventFitData*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_195_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeEventFitData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_195_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeEventFitData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_195_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeEventFitData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_195_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeEventFitData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_195_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeEventFitData*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_195_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeEventFitData*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_195_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeEventFitData*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_195_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeEventFitData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_195_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeEventFitData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_195_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeEventFitData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_195_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeEventFitData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AppDict_195_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeEventFitData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AppDict_195_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeEventFitData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeEventFitData(*(TreeEventFitData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AppDictLN_TreeEventFitData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeEventFitData G__TTreeEventFitData;
static int G__AppDict_195_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeEventFitData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeEventFitData*) (soff+(sizeof(TreeEventFitData)*i)))->~G__TTreeEventFitData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeEventFitData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeEventFitData*) (soff))->~G__TTreeEventFitData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AppDict_195_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeEventFitData* dest = (TreeEventFitData*) G__getstructoffset();
   *dest = *(TreeEventFitData*) libp->para[0].ref;
   const TreeEventFitData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* DrawHelper */

/* ISingleton<DrawHelper> */

/* TreeEventOutputData */

/* TreeEventFitData */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncAppDict {
 public:
  G__Sizep2memfuncAppDict(): p(&G__Sizep2memfuncAppDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncAppDict::*p)();
};

size_t G__get_sizep2memfuncAppDict()
{
  G__Sizep2memfuncAppDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceAppDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AppDictLN_DrawHelper))) {
     DrawHelper *G__Lderived;
     G__Lderived=(DrawHelper*)0x1000;
     {
       ISingleton<DrawHelper> *G__Lpbase=(ISingleton<DrawHelper>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AppDictLN_DrawHelper),G__get_linked_tagnum(&G__AppDictLN_ISingletonlEDrawHelpergR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AppDictLN_DrawHelper),G__get_linked_tagnum(&G__AppDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableAppDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__AppDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AppDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AppDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AppDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AppDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__AppDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AppDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AppDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AppDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AppDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("T_Pointer",85,G__get_linked_tagnum(&G__AppDictLN_DrawHelper),0,G__get_linked_tagnum(&G__AppDictLN_ISingletonlEDrawHelpergR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TCanvas*>",117,G__get_linked_tagnum(&G__AppDictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AppDictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AppDictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AppDictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AppDictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<double> >",117,G__get_linked_tagnum(&G__AppDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double> >",117,G__get_linked_tagnum(&G__AppDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AppDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AppDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AppDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AppDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__AppDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__AppDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__AppDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AppDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AppDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AppDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AppDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__AppDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* DrawHelper */
static void G__setup_memvarDrawHelper(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AppDictLN_DrawHelper));
   { DrawHelper *p; p=(DrawHelper*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"m_default_canvas_xsize=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"m_default_canvas_ysize=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AppDictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR),G__defined_typename("vector<TCanvas*>"),-1,4,"m_registered_canvases=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AppDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ISingleton<DrawHelper> */
static void G__setup_memvarISingletonlEDrawHelpergR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AppDictLN_ISingletonlEDrawHelpergR));
   { ISingleton<DrawHelper> *p; p=(ISingleton<DrawHelper>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AppDictLN_DrawHelper),G__defined_typename("T_Pointer"),-2,4,"m_instance=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-2,4,"m_destroyed=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeEventOutputData */
static void G__setup_memvarTreeEventOutputData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AppDictLN_TreeEventOutputData));
   { TreeEventOutputData *p; p=(TreeEventOutputData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nframe)-(long)(p)),105,0,0,-1,-1,-1,1,"nframe=",0,"number of frame");
   G__memvar_setup((void*)((long)(&p->alpha_i)-(long)(p)),100,0,0,-1,-1,-1,1,"alpha_i=",0,"alpha_i");
   G__memvar_setup((void*)((long)(&p->phi_i)-(long)(p)),100,0,0,-1,-1,-1,1,"phi_i=",0,"phi_i;");
   G__memvar_setup((void*)((long)(&p->nphi_f)-(long)(p)),105,0,0,-1,-1,-1,1,"nphi_f=",0,"number of phi_f bins in the frame");
   G__memvar_setup((void*)((long)(&p->phi_f_min)-(long)(p)),100,0,0,-1,-1,-1,1,"phi_f_min=",0,"minimum value of phi_f");
   G__memvar_setup((void*)((long)(&p->phi_f_max)-(long)(p)),100,0,0,-1,-1,-1,1,"phi_f_max=",0,"maximu value of phi_f");
   G__memvar_setup((void*)((long)(&p->nalpha_f)-(long)(p)),105,0,0,-1,-1,-1,1,"nalpha_f=",0,"number of alpha_f bins in the frame");
   G__memvar_setup((void*)((long)(&p->alpha_f_min)-(long)(p)),100,0,0,-1,-1,-1,1,"alpha_f_min=",0,"minimum value of alpha_f");
   G__memvar_setup((void*)((long)(&p->alpha_f_max)-(long)(p)),100,0,0,-1,-1,-1,1,"alpha_f_max=",0,"maximum value of alpha_f");
   G__memvar_setup((void*)((long)(&p->malpha)-(long)(p)),100,0,0,-1,-1,-1,1,"malpha=",0,"rotation of meso around Y");
   G__memvar_setup((void*)((long)(&p->mphi)-(long)(p)),100,0,0,-1,-1,-1,1,"mphi=",0,"rotation of meso around Z");
   G__memvar_setup((void*)((long)(&p->npR)-(long)(p)),100,0,0,-1,-1,-1,1,"npR=",0,"size of nano particles inside if meso");
   G__memvar_setup((void*)((long)(&p->vi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AppDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<double> >"),-1,1,"vi=",0,"frame of measured intensities [phi_f][alpha_f]");
   G__memvar_setup((void*)((long)(&p->valpha_f)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AppDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<double> >"),-1,1,"valpha_f=",0,"values of alpha_f for the frame");
   G__memvar_setup((void*)((long)(&p->vphi_f)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AppDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<double> >"),-1,1,"vphi_f=",0,"values of phi_f for the frames");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AppDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeEventFitData */
static void G__setup_memvarTreeEventFitData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AppDictLN_TreeEventFitData));
   { TreeEventFitData *p; p=(TreeEventFitData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->niter)-(long)(p)),105,0,0,-1,-1,-1,1,"niter=",0,"number of iteration");
   G__memvar_setup((void*)((long)(&p->nstrategy)-(long)(p)),105,0,0,-1,-1,-1,1,"nstrategy=",0,"number of strategy");
   G__memvar_setup((void*)((long)(&p->real_data)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AppDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<double> >"),-1,1,"real_data=",0,"real data");
   G__memvar_setup((void*)((long)(&p->fit_data)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AppDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<double> >"),-1,1,"fit_data=",0,"current fit iteration data");
   G__memvar_setup((void*)((long)(&p->axis0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AppDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<double> >"),-1,1,"axis0=",0,"values of phi_f (made in 2D for convenient drawing)");
   G__memvar_setup((void*)((long)(&p->axis1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AppDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<double> >"),-1,1,"axis1=",0,"values of alpha_f (made in 2D for convenient drawing)");
   G__memvar_setup((void*)((long)(&p->chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"chi2=",0,"current value of the function to minimize");
   G__memvar_setup((void*)((long)(&p->parvalues)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AppDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"parvalues=",0,"vector of minimization parameters");
   G__memvar_setup((void*)((long)(&p->parnames)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AppDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,1,"parnames=",0,"names of parameters");
   G__memvar_setup((void*)((long)(&p->parfixed)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AppDictLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<bool>"),-1,1,"parfixed=",0,"contains fixed flag for parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AppDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarAppDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDrawHelper(void) {
   /* DrawHelper */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AppDictLN_DrawHelper));
   G__memfunc_setup("SetStyle",829,G__AppDict_184_0_1, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DrawHelper::SetStyle) ), 0);
   G__memfunc_setup("SaveReportPDFObsolete",2082,G__AppDict_184_0_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DrawHelper::SaveReportPDFObsolete) ), 0);
   G__memfunc_setup("SetMagnifier",1214,G__AppDict_184_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExecuteMagnifier",1637,G__AppDict_184_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py U 'TObject' - 0 - sel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawMultilayer",1462,G__AppDict_184_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MultiLayer' - 10 - sample", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createAndRegisterCanvas",2344,G__AppDict_184_0_6, 85, G__get_linked_tagnum(&G__AppDictLN_TCanvas), -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - title "
"i - - 0 '0' xsize i - - 0 '0' ysize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveReport",1067,G__AppDict_184_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawMesoCrystal",1540,G__AppDict_184_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MultiLayer' - 10 - sample", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawHelper",1006,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__AppDictLN_DrawHelper), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AppDict_184_0_10, 85, G__get_linked_tagnum(&G__AppDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DrawHelper::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AppDict_184_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DrawHelper::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AppDict_184_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DrawHelper::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AppDict_184_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DrawHelper::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AppDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AppDict_184_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AppDict_184_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DrawHelper::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AppDict_184_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DrawHelper::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AppDict_184_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DrawHelper::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AppDict_184_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DrawHelper::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~DrawHelper", 1132, G__AppDict_184_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncISingletonlEDrawHelpergR(void) {
   /* ISingleton<DrawHelper> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AppDictLN_ISingletonlEDrawHelpergR));
   G__memfunc_setup("instance",853,G__AppDict_185_0_1, 117, G__get_linked_tagnum(&G__AppDictLN_DrawHelper), -1, 1, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (DrawHelper& (*)())(&ISingleton<DrawHelper>::instance) ), 0);
   G__memfunc_setup("ISingleton<DrawHelper>",2148,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__AppDictLN_ISingletonlEDrawHelpergR), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("create_singleton",1702,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 3, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("onDeadReference",1498,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 3, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ISingleton<DrawHelper>",2148,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__AppDictLN_ISingletonlEDrawHelpergR), -1, 0, 1, 1, 4, 0, "u 'ISingleton<DrawHelper>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__AppDictLN_ISingletonlEDrawHelpergR), -1, 1, 1, 1, 4, 0, "u 'ISingleton<DrawHelper>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeEventOutputData(void) {
   /* TreeEventOutputData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AppDictLN_TreeEventOutputData));
   G__memfunc_setup("TreeEventOutputData",1949,G__AppDict_190_0_1, 105, G__get_linked_tagnum(&G__AppDictLN_TreeEventOutputData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__AppDict_190_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AppDict_190_0_3, 85, G__get_linked_tagnum(&G__AppDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeEventOutputData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AppDict_190_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeEventOutputData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AppDict_190_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeEventOutputData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AppDict_190_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeEventOutputData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__AppDict_190_0_7, 85, G__get_linked_tagnum(&G__AppDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__AppDict_190_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__AppDict_190_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AppDict_190_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AppDict_190_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeEventOutputData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AppDict_190_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeEventOutputData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AppDict_190_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeEventOutputData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AppDict_190_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeEventOutputData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TreeEventOutputData", 1949, G__AppDict_190_0_15, (int) ('i'), G__get_linked_tagnum(&G__AppDictLN_TreeEventOutputData), -1, 0, 1, 1, 1, 0, "u 'TreeEventOutputData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TreeEventOutputData", 2075, G__AppDict_190_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AppDict_190_0_17, (int) ('u'), G__get_linked_tagnum(&G__AppDictLN_TreeEventOutputData), -1, 1, 1, 1, 1, 0, "u 'TreeEventOutputData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeEventFitData(void) {
   /* TreeEventFitData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AppDictLN_TreeEventFitData));
   G__memfunc_setup("TreeEventFitData",1583,G__AppDict_195_0_1, 105, G__get_linked_tagnum(&G__AppDictLN_TreeEventFitData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__AppDict_195_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AppDict_195_0_3, 85, G__get_linked_tagnum(&G__AppDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeEventFitData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AppDict_195_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeEventFitData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AppDict_195_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeEventFitData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AppDict_195_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeEventFitData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__AppDict_195_0_7, 85, G__get_linked_tagnum(&G__AppDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__AppDict_195_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__AppDict_195_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AppDict_195_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AppDict_195_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeEventFitData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AppDict_195_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeEventFitData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AppDict_195_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeEventFitData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AppDict_195_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeEventFitData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TreeEventFitData", 1583, G__AppDict_195_0_15, (int) ('i'), G__get_linked_tagnum(&G__AppDictLN_TreeEventFitData), -1, 0, 1, 1, 1, 0, "u 'TreeEventFitData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TreeEventFitData", 1709, G__AppDict_195_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AppDict_195_0_17, (int) ('u'), G__get_linked_tagnum(&G__AppDictLN_TreeEventFitData), -1, 1, 1, 1, 1, 0, "u 'TreeEventFitData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncAppDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalAppDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcAppDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__AppDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__AppDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__AppDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__AppDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__AppDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__AppDictLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__AppDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__AppDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__AppDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AppDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__AppDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AppDictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__AppDictLN_MultiLayer = { "MultiLayer" , 99 , -1 };
G__linked_taginfo G__AppDictLN_DrawHelper = { "DrawHelper" , 99 , -1 };
G__linked_taginfo G__AppDictLN_ISingletonlEDrawHelpergR = { "ISingleton<DrawHelper>" , 99 , -1 };
G__linked_taginfo G__AppDictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR = { "vector<TCanvas*,allocator<TCanvas*> >" , 99 , -1 };
G__linked_taginfo G__AppDictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TCanvas*,allocator<TCanvas*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AppDictLN_TreeEventOutputData = { "TreeEventOutputData" , 99 , -1 };
G__linked_taginfo G__AppDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__AppDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__AppDictLN_TreeEventFitData = { "TreeEventFitData" , 99 , -1 };
G__linked_taginfo G__AppDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__AppDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableAppDict() {
  G__AppDictLN_TClass.tagnum = -1 ;
  G__AppDictLN_TBuffer.tagnum = -1 ;
  G__AppDictLN_TMemberInspector.tagnum = -1 ;
  G__AppDictLN_TObject.tagnum = -1 ;
  G__AppDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__AppDictLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__AppDictLN_string.tagnum = -1 ;
  G__AppDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__AppDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AppDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__AppDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AppDictLN_TCanvas.tagnum = -1 ;
  G__AppDictLN_MultiLayer.tagnum = -1 ;
  G__AppDictLN_DrawHelper.tagnum = -1 ;
  G__AppDictLN_ISingletonlEDrawHelpergR.tagnum = -1 ;
  G__AppDictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR.tagnum = -1 ;
  G__AppDictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AppDictLN_TreeEventOutputData.tagnum = -1 ;
  G__AppDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__AppDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AppDictLN_TreeEventFitData.tagnum = -1 ;
  G__AppDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__AppDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableAppDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__AppDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__AppDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__AppDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__AppDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__AppDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__AppDictLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__AppDictLN_string);
   G__get_linked_tagnum_fwd(&G__AppDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__AppDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AppDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AppDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AppDictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__AppDictLN_MultiLayer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AppDictLN_DrawHelper),sizeof(DrawHelper),-1,291072,(char*)NULL,G__setup_memvarDrawHelper,G__setup_memfuncDrawHelper);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AppDictLN_ISingletonlEDrawHelpergR),sizeof(ISingleton<DrawHelper>),-1,265984,(char*)NULL,G__setup_memvarISingletonlEDrawHelpergR,G__setup_memfuncISingletonlEDrawHelpergR);
   G__get_linked_tagnum_fwd(&G__AppDictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AppDictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AppDictLN_TreeEventOutputData),sizeof(TreeEventOutputData),-1,263424,(char*)NULL,G__setup_memvarTreeEventOutputData,G__setup_memfuncTreeEventOutputData);
   G__get_linked_tagnum_fwd(&G__AppDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AppDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AppDictLN_TreeEventFitData),sizeof(TreeEventFitData),-1,263424,(char*)NULL,G__setup_memvarTreeEventFitData,G__setup_memfuncTreeEventFitData);
   G__get_linked_tagnum_fwd(&G__AppDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__AppDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupAppDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupAppDict()");
  G__set_cpp_environmentAppDict();
  G__cpp_setup_tagtableAppDict();

  G__cpp_setup_inheritanceAppDict();

  G__cpp_setup_typetableAppDict();

  G__cpp_setup_memvarAppDict();

  G__cpp_setup_memfuncAppDict();
  G__cpp_setup_globalAppDict();
  G__cpp_setup_funcAppDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncAppDict();
  return;
}
class G__cpp_setup_initAppDict {
  public:
    G__cpp_setup_initAppDict() { G__add_setup_func("AppDict",(G__incsetup)(&G__cpp_setupAppDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initAppDict() { G__remove_setup_func("AppDict"); }
};
G__cpp_setup_initAppDict G__cpp_setup_initializerAppDict;

