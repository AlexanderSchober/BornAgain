cmake_minimum_required(VERSION 2.8 FATAL_ERROR)

set(lib lib)
set(bin bin)

if(WIN32)
  set(ssuffix .bat)
  set(scomment rem)
  set(libprefix lib)
  set(ld_library_path PATH)
  set(libsuffix .dll)
  set(runtimedir bin)
elseif(APPLE)
  set(ld_library_path DYLD_LIBRARY_PATH)
  set(ssuffix .csh)
  set(scomment \#)
  set(libprefix lib)
  set(libsuffix .so)
  set(runtimedir lib)
else()
  set(ld_library_path LD_LIBRARY_PATH)
  set(ssuffix .csh)
  set(scomment \#)
  set(libprefix lib)
  set(libsuffix .so) 
  set(runtimedir lib) 
endif()


#---------------------------------------------------------------------------------------------------
# BORNAGAIN_USE_PACKAGE( package )
#---------------------------------------------------------------------------------------------------
macro( BORNAGAIN_USE_PACKAGE package )
    if( EXISTS ${CMAKE_SOURCE_DIR}/${package}/CMakeLists.txt)
        set(_use_packages ${_use_packages} ${package}) 
        include_directories( ${CMAKE_SOURCE_DIR}/${package}/inc ) 
        set_property(GLOBAL APPEND PROPERTY ROOT_BUILDTREE_PACKAGES ${package})
        file(READ ${CMAKE_SOURCE_DIR}/${package}/CMakeLists.txt file_contents)
        string( REGEX MATCHALL "ROOT_USE_PACKAGE[ ]*[(][ ]*([^ )])+" vars ${file_contents})
        foreach( var ${vars})
            string(REGEX REPLACE "ROOT_USE_PACKAGE[ ]*[(][ ]*([^ )])" "\\1" p ${var})
            #---avoid calling the same one at the same directory level ---------------------------------
            list(FIND _use_packages ${p} _done)
            if(_done EQUAL -1)
                ROOT_USE_PACKAGE(${p})
            endif()
        endforeach()
    else()
        #find_package(${package})
        #GET_PROPERTY(parent DIRECTORY PROPERTY PARENT_DIRECTORY)
        #if(parent)
            #set(${package}_environment  ${${package}_environment} PARENT_SCOPE)
        #else()
        #    set(${package}_environment  ${${package}_environment} )
        #endif()
        include_directories( ${${package}_INCLUDE_DIRS} ) 
        link_directories( ${${package}_LIBRARY_DIRS} ) 
    endif()
endmacro()

