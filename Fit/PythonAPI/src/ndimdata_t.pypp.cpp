// This file has been generated by Py++.

#include "Macros.h"
GCC_DIAG_OFF(unused-parameter);
GCC_DIAG_OFF(missing-field-initializers);
#include "boost/python.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
GCC_DIAG_ON(unused-parameter);
GCC_DIAG_ON(missing-field-initializers);
#include "AttLimits.h"
#include "IChiSquaredModule.h"
#include "IMinimizer.h"
#include "ChiSquaredModule.h"
#include "FitSuite.h"
#include "MinimizerFactory.h"
#include "OutputData.h"
#include "PythonPlusplusFitHelper.h"
#include "ndimdata_t.pypp.h"

namespace bp = boost::python;

void register_ndimdata_t_class(){

    bp::class_< OutputData< double >, boost::noncopyable >( "ndimdata_t", bp::init< >() )    
        .def( bp::self *= bp::self )    
        .def( bp::self += bp::self )    
        .def( bp::self -= bp::self )    
        .def( bp::self /= bp::self )    
        .def( 
            "__getitem__"
            , (double & ( ::OutputData<double>::* )( ::size_t ) )( &::OutputData< double >::operator[] )
            , ( bp::arg("index") )
            , bp::return_value_policy< bp::copy_non_const_reference >() )    
        .def( 
            "__getitem__"
            , (double const & ( ::OutputData<double>::* )( ::size_t ) const)( &::OutputData< double >::operator[] )
            , ( bp::arg("index") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "totalSum"
            , (double ( ::OutputData<double>::* )(  ) const)( &::OutputData< double >::totalSum ) );

}
