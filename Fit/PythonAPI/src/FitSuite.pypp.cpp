// This file has been generated by Py++.

#include "Macros.h"
GCC_DIAG_OFF(unused-parameter);
GCC_DIAG_OFF(missing-field-initializers);
#include "boost/python.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
GCC_DIAG_ON(unused-parameter);
GCC_DIAG_ON(missing-field-initializers);
#include "AttLimits.h"
#include "IChiSquaredModule.h"
#include "IMinimizer.h"
#include "ChiSquaredModule.h"
#include "FitSuite.h"
#include "MinimizerFactory.h"
#include "PythonPlusplusFitHelper.h"
#include "MathFunctions.h"
#include "ISquaredFunction.h"
#include "IOutputDataNormalizer.h"
#include "FitSuite.pypp.h"

namespace bp = boost::python;

struct FitSuite_wrapper : FitSuite, bp::wrapper< FitSuite > {

    FitSuite_wrapper( )
    : FitSuite( )
      , bp::wrapper< FitSuite >(){
        // null constructor
    
    }

    virtual void runFit(  ) {
        if( bp::override func_runFit = this->get_override( "runFit" ) )
            func_runFit(  );
        else{
            this->FitSuite::runFit(  );
        }
    }
    
    void default_runFit(  ) {
        FitSuite::runFit( );
    }

};

void register_FitSuite_class(){

    bp::class_< FitSuite_wrapper, boost::noncopyable >( "FitSuite", bp::no_init )    
        .def( bp::init< >() )    
        .def( 
            "addFitParameter"
            , (void ( ::FitSuite::* )( ::std::string const &,double,double,::AttLimits const &,double ) )( &::FitSuite::addFitParameter )
            , ( bp::arg("name"), bp::arg("value"), bp::arg("step"), bp::arg("attlim")=AttLimits::limitless( ), bp::arg("error")=0.0 ) )    
        .def( 
            "addFitParameter"
            , (void ( ::FitSuite::* )( ::std::string const &,double,::AttLimits const &,double ) )( &::FitSuite::addFitParameter )
            , ( bp::arg("name"), bp::arg("value"), bp::arg("attlim")=AttLimits::limitless( ), bp::arg("error")=0.0 ) )    
        .def( 
            "addSimulationAndRealData"
            , (void ( ::FitSuite::* )( ::Simulation const &,::OutputData< double > const &,::IChiSquaredModule const & ) )( &::FitSuite::addSimulationAndRealData )
            , ( bp::arg("simulation"), bp::arg("real_data"), bp::arg("chi2_module")=ChiSquaredModule() ) )    
        .def( 
            "getMinimizer"
            , (::IMinimizer * ( ::FitSuite::* )(  ) )( &::FitSuite::getMinimizer )
            , bp::return_value_policy< bp::reference_existing_object >() )    
        .def( 
            "getNCalls"
            , (::size_t ( ::FitSuite::* )(  ) const)( &::FitSuite::getNCalls ) )    
        .def( 
            "initPrint"
            , (void ( ::FitSuite::* )( int ) )( &::FitSuite::initPrint )
            , ( bp::arg("print_every_nth") ) )    
        .def( 
            "printResults"
            , (void ( ::FitSuite::* )(  ) const)( &::FitSuite::printResults ) )    
        .def( 
            "runFit"
            , (void ( ::FitSuite::* )(  ) )(&::FitSuite::runFit)
            , (void ( FitSuite_wrapper::* )(  ) )(&FitSuite_wrapper::default_runFit) )    
        .def( 
            "setMinimizer"
            , (void ( ::FitSuite::* )( ::IMinimizer * ) )( &::FitSuite::setMinimizer )
            , ( bp::arg("minimizer") ) );

}
