// This file has been generated by Py++.

#include "Macros.h"
GCC_DIAG_OFF(unused-parameter);
GCC_DIAG_OFF(missing-field-initializers);
#include "boost/python.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
GCC_DIAG_ON(unused-parameter);
GCC_DIAG_ON(missing-field-initializers);
#include "AttLimits.h"
#include "IChiSquaredModule.h"
#include "IMinimizer.h"
#include "ChiSquaredModule.h"
#include "FitSuite.h"
#include "FitSuiteParameters.h"
#include "MinimizerFactory.h"
#include "PythonPlusplusFitHelper.h"
#include "MathFunctions.h"
#include "ISquaredFunction.h"
#include "IOutputDataNormalizer.h"
#include "IOutputDataNormalizer.pypp.h"

namespace bp = boost::python;

struct IOutputDataNormalizer_wrapper : IOutputDataNormalizer, bp::wrapper< IOutputDataNormalizer > {

    IOutputDataNormalizer_wrapper()
    : IOutputDataNormalizer()
      , bp::wrapper< IOutputDataNormalizer >(){
        // null constructor
        
    }

    virtual ::IOutputDataNormalizer * clone(  ) const {
        bp::override func_clone = this->get_override( "clone" );
        return func_clone(  );
    }

    virtual ::OutputData< double > * createNormalizedData( ::OutputData< double > const & data ) const {
        bp::override func_createNormalizedData = this->get_override( "createNormalizedData" );
        return func_createNormalizedData( boost::ref(data) );
    }

    virtual void setMaximumIntensity( double arg0 ){
        bp::override func_setMaximumIntensity = this->get_override( "setMaximumIntensity" );
        func_setMaximumIntensity( arg0 );
    }

};

void register_IOutputDataNormalizer_class(){

    bp::class_< IOutputDataNormalizer_wrapper, boost::noncopyable >( "IOutputDataNormalizer" )    
        .def( 
            "clone"
            , bp::pure_virtual( (::IOutputDataNormalizer * ( ::IOutputDataNormalizer::* )(  ) const)(&::IOutputDataNormalizer::clone) )
            , bp::return_value_policy< bp::manage_new_object >() )    
        .def( 
            "createNormalizedData"
            , bp::pure_virtual( (::OutputData< double > * ( ::IOutputDataNormalizer::* )( ::OutputData< double > const & ) const)(&::IOutputDataNormalizer::createNormalizedData) )
            , ( bp::arg("data") )
            , bp::return_value_policy< bp::manage_new_object >() )    
        .def( 
            "setMaximumIntensity"
            , bp::pure_virtual( (void ( ::IOutputDataNormalizer::* )( double ) )(&::IOutputDataNormalizer::setMaximumIntensity) )
            , ( bp::arg("arg0") ) );

}
