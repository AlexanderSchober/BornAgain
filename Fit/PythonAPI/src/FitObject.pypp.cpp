// This file has been generated by Py++.

// BornAgain: simulate and fit scattering at grazing incidence 
//! @brief automatically generated boost::python code for PythonCoreAPI  

#include "Macros.h"
GCC_DIAG_OFF(unused-parameter);
GCC_DIAG_OFF(missing-field-initializers);
#include "boost/python.hpp"
GCC_DIAG_ON(unused-parameter);
GCC_DIAG_ON(missing-field-initializers);
#include "PythonFitList.h"
#include "FitObject.pypp.h"

namespace bp = boost::python;

void register_FitObject_class(){

    { //::FitObject
        typedef bp::class_< FitObject, boost::noncopyable > FitObject_exposer_t;
        FitObject_exposer_t FitObject_exposer = FitObject_exposer_t( "FitObject", bp::init< Simulation const &, OutputData< double > const &, bp::optional< IChiSquaredModule const &, double > >(( bp::arg("simulation"), bp::arg("real_data"), bp::arg("chi2_module")=ChiSquaredModule(), bp::arg("weight")=1 )) );
        bp::scope FitObject_scope( FitObject_exposer );
        { //::FitObject::calculateChiSquared
        
            typedef double ( ::FitObject::*calculateChiSquared_function_type )(  ) ;
            
            FitObject_exposer.def( 
                "calculateChiSquared"
                , calculateChiSquared_function_type( &::FitObject::calculateChiSquared ) );
        
        }
        { //::FitObject::getChiSquaredModule
        
            typedef ::IChiSquaredModule const * ( ::FitObject::*getChiSquaredModule_function_type )(  ) const;
            
            FitObject_exposer.def( 
                "getChiSquaredModule"
                , getChiSquaredModule_function_type( &::FitObject::getChiSquaredModule )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::FitObject::getChiSquaredModule
        
            typedef ::IChiSquaredModule * ( ::FitObject::*getChiSquaredModule_function_type )(  ) ;
            
            FitObject_exposer.def( 
                "getChiSquaredModule"
                , getChiSquaredModule_function_type( &::FitObject::getChiSquaredModule )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::FitObject::getRealData
        
            typedef ::OutputData< double > const * ( ::FitObject::*getRealData_function_type )(  ) const;
            
            FitObject_exposer.def( 
                "getRealData"
                , getRealData_function_type( &::FitObject::getRealData )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::FitObject::getSimulation
        
            typedef ::Simulation const * ( ::FitObject::*getSimulation_function_type )(  ) const;
            
            FitObject_exposer.def( 
                "getSimulation"
                , getSimulation_function_type( &::FitObject::getSimulation )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::FitObject::getSimulation
        
            typedef ::Simulation * ( ::FitObject::*getSimulation_function_type )(  ) ;
            
            FitObject_exposer.def( 
                "getSimulation"
                , getSimulation_function_type( &::FitObject::getSimulation )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::FitObject::getSimulationData
        
            typedef ::OutputData< double > const * ( ::FitObject::*getSimulationData_function_type )(  ) const;
            
            FitObject_exposer.def( 
                "getSimulationData"
                , getSimulationData_function_type( &::FitObject::getSimulationData )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::FitObject::getSizeOfData
        
            typedef ::std::size_t ( ::FitObject::*getSizeOfData_function_type )(  ) const;
            
            FitObject_exposer.def( 
                "getSizeOfData"
                , getSizeOfData_function_type( &::FitObject::getSizeOfData ) );
        
        }
        { //::FitObject::getWeight
        
            typedef double ( ::FitObject::*getWeight_function_type )(  ) const;
            
            FitObject_exposer.def( 
                "getWeight"
                , getWeight_function_type( &::FitObject::getWeight ) );
        
        }
        { //::FitObject::setChiSquaredModule
        
            typedef void ( ::FitObject::*setChiSquaredModule_function_type )( ::IChiSquaredModule const & ) ;
            
            FitObject_exposer.def( 
                "setChiSquaredModule"
                , setChiSquaredModule_function_type( &::FitObject::setChiSquaredModule )
                , ( bp::arg("chi2_module") ) );
        
        }
        { //::FitObject::setRealData
        
            typedef void ( ::FitObject::*setRealData_function_type )( ::OutputData< double > const & ) ;
            
            FitObject_exposer.def( 
                "setRealData"
                , setRealData_function_type( &::FitObject::setRealData )
                , ( bp::arg("real_data") ) );
        
        }
        { //::FitObject::setSimulation
        
            typedef void ( ::FitObject::*setSimulation_function_type )( ::Simulation const & ) ;
            
            FitObject_exposer.def( 
                "setSimulation"
                , setSimulation_function_type( &::FitObject::setSimulation )
                , ( bp::arg("simulation") ) );
        
        }
    }

}
