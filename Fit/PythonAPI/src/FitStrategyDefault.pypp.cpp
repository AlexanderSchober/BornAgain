// This file has been generated by Py++.

// ************************************************************************** //
//
//  BornAgain: simulate and fit scattering at grazing incidence
//
//! @file      Automatically generated boost::python code for BornAgain Python bindings
//! @brief     Automatically generated boost::python code for BornAgain Python bindings
//!
//! @homepage  http://bornagainproject.org
//! @license   GNU General Public License v3 or higher (see COPYING)
//! @copyright Forschungszentrum Juelich GmbH 2015
//! @authors   Scientific Computing Group at MLZ Garching
//! @authors   C. Durniak, M. Ganeva, G. Pospelov, W. Van Herck, J. Wuttke
//
// ************************************************************************** //

#include "Macros.h"
GCC_DIAG_OFF(unused-parameter)
GCC_DIAG_OFF(missing-field-initializers)
#include "boost/python.hpp"
GCC_DIAG_ON(unused-parameter)
GCC_DIAG_ON(missing-field-initializers)
#include "PythonFitList.h"
#include "FitStrategyDefault.pypp.h"

namespace bp = boost::python;

struct FitStrategyDefault_wrapper : FitStrategyDefault, bp::wrapper< FitStrategyDefault > {

    FitStrategyDefault_wrapper(FitStrategyDefault const & arg )
    : FitStrategyDefault( arg )
      , bp::wrapper< FitStrategyDefault >(){
        // copy constructor
        m_pyobj = 0;
    }

    FitStrategyDefault_wrapper( )
    : FitStrategyDefault( )
      , bp::wrapper< FitStrategyDefault >(){
        // null constructor
    m_pyobj = 0;
    }

    virtual ::IFitStrategy * clone(  ) const  {
        if( bp::override func_clone = this->get_override( "clone" ) )
            return func_clone(  );
        else{
            return this->FitStrategyDefault::clone(  );
        }
    }
    
    ::IFitStrategy * default_clone(  ) const  {
        return FitStrategyDefault::clone( );
    }

    virtual void execute(  ) {
        if( bp::override func_execute = this->get_override( "execute" ) )
            func_execute(  );
        else{
            this->FitStrategyDefault::execute(  );
        }
    }
    
    void default_execute(  ) {
        FitStrategyDefault::execute( );
    }

    PyObject* m_pyobj;

};

void register_FitStrategyDefault_class(){

    { //::FitStrategyDefault
        typedef bp::class_< FitStrategyDefault_wrapper, bp::bases< IFitStrategy >, std::auto_ptr< FitStrategyDefault_wrapper > > FitStrategyDefault_exposer_t;
        FitStrategyDefault_exposer_t FitStrategyDefault_exposer = FitStrategyDefault_exposer_t( "FitStrategyDefault", bp::init< >() );
        bp::scope FitStrategyDefault_scope( FitStrategyDefault_exposer );
        { //::FitStrategyDefault::clone
        
            typedef ::IFitStrategy * ( ::FitStrategyDefault::*clone_function_type)(  ) const;
            typedef ::IFitStrategy * ( FitStrategyDefault_wrapper::*default_clone_function_type)(  ) const;
            
            FitStrategyDefault_exposer.def( 
                "clone"
                , clone_function_type(&::FitStrategyDefault::clone)
                , default_clone_function_type(&FitStrategyDefault_wrapper::default_clone)
                , bp::return_value_policy< bp::manage_new_object >() );
        
        }
        { //::FitStrategyDefault::execute
        
            typedef void ( ::FitStrategyDefault::*execute_function_type)(  ) ;
            typedef void ( FitStrategyDefault_wrapper::*default_execute_function_type)(  ) ;
            
            FitStrategyDefault_exposer.def( 
                "execute"
                , execute_function_type(&::FitStrategyDefault::execute)
                , default_execute_function_type(&FitStrategyDefault_wrapper::default_execute) );
        
        }
    }

}
