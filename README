This is the GISASFW framework.

-------------------------------------------------------------------------------
Package content:
-------------------------------------------------------------------------------
./Core       - the main library of the framework
./App        - functional tests
./ThirdParty - third party libraries
./UnitTests  - collection of cpp unit tests
./Examples   - usage examples
./Doc        - documentation

-------------------------------------------------------------------------------
Installation Instructions
-------------------------------------------------------------------------------

> Installation in lucky case 
~ cd <to_the_package_directory>
~ qmake; make

* 'make clean', and more powerfull 'make distclean' are also available

> Installation of additional libraries might be required before
* gsl fftw3 boost(>1.46)  - these are dependencies of Core
* ROOT                    - these are dependencies of App
* probably also python>=2.6 and Qt>=4.5

* (see explanation about 'root' below)

> Checked on following platforms
*  MacOS 10.7.3
*  OpenSuse 12.1
*  CentOS 5.1 with JCNS setup (see issue below)

> Issue with CentOS from JCNS
* it has /usr/local with lot of officially installed libraries
* however
* fftw3 in /usr/local compiled only statically
  As a temporary workaround GISASFW package should be compiled with
  qmake CONFIG+=JCNS; make
* boost 1.46 which is there, is buggy too
  As a temporary workaround you have to define environment variable
  export LC_ALL=C
  for more information see https://svn.boost.org/trac/boost/ticket/5928 or google for
  "locale::facet::_S_create_c_locale name not valid"


-------------------------------------------------------------------------------
Installation Instructions +
-------------------------------------------------------------------------------
> Words about ROOT.
ROOT is extremely powerfull, awfully professional and exceptionally supported,
C++ based analysis framework, see http://root.cern.ch.
Framework has to be installed to be able to compile App part (containing functional tests). You do not need to install
ROOT to have only Core library.

> How to install ROOT
* different ways are explained on site
* one possible way is following
*
* download source from http://root.cern.ch, unpack it somewhere
* define variable pointing to the directory where ROOT will be installed
  export ROOTSYS=/home/jamesbond/software/root
* go to the directory where you unpacked ROOT and run
  ./configure; make; make install

> Steps after installation
* ROOT requires couple of system variables to be defined
* the easiest way to do it is to run
  source /home/jamesbond/software/root/bin/thisroot.sh
  each time you are going to use ROOT
* simply put this call in your .bash_profile

* or you can just define variables by yourself
  export ROOTSYS=/home/jamesbond/software/root
  export PATH=$ROOTSYS/bin:$PATH
  export LD_LIBRARY_PATH=$ROOTSYS/lib:$LD_LIBRARY_PATH




