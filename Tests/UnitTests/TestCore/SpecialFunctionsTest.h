// ************************************************************************** //
//
//  BornAgain: simulate and fit scattering at grazing incidence
//
//! @file      FormFactorTest.h
//! @brief     Defines unit test for Form factors.
//!
//! @homepage  http://bornagainproject.org
//! @license   GNU General Public License v3 or higher (see COPYING)
//! @copyright Forschungszentrum JÃ¼lich GmbH 2015
//! @authors   Scientific Computing Group at MLZ Garching
//! @authors   C. Durniak, M. Ganeva, G. Pospelov, W. Van Herck, J. Wuttke
//
// ************************************************************************** //

#ifndef SPECIALFUNCTIONSTEST_H
#define SPECIALFUNCTIONSTEST_H

#include "MathFunctions.h"
#include "gtest/gtest.h"

class SpecialFunctionsTest : public ::testing::Test
{
protected:
    SpecialFunctionsTest(){}
};

// Test complex Bessel function J1
TEST_F(SpecialFunctionsTest, BesselJ1)
{
    const double eps = 4.7e-16; // more than twice the machine precision
    complex_t res, res2, res3;
    double slope;

    // Test against values computed with dev-tools/math/cbesselJ01.c
    // (the following lines are semi-automatically generated by that program)
    res = MathFunctions::crbond_bessel_J1(complex_t(0.8,1.5));
    EXPECT_NEAR( res.real(), 0.72837687825769404, eps*std::abs(res) );
    EXPECT_NEAR( res.imag(), 0.75030568686427268, eps*std::abs(res) );

    res = MathFunctions::crbond_bessel_J1(complex_t(1e-2,1e2));
    EXPECT_NEAR( res.real(), 1.0630504683139779e+40, eps*std::abs(res) );
    EXPECT_NEAR( res.imag(), 1.0683164984973165e+42, eps*std::abs(res) );

    res = MathFunctions::crbond_bessel_J1(complex_t(-1e2,-1e-2));
    EXPECT_NEAR( res.real(), 0.077149198549289394, eps*std::abs(res) );
    EXPECT_NEAR( res.imag(), -0.0002075766253119904, eps*std::abs(res) );

    res = MathFunctions::crbond_bessel_J1(complex_t(7,9));
    EXPECT_NEAR( res.real(),       370.00180888861155, eps*std::abs(res) );
    EXPECT_NEAR( res.imag(),       856.00300811057934, eps*std::abs(res) );
}

#endif //SPECIALFUNCTIONSTEST_H
